; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27034.0 

include listing.inc

INCLUDELIB OLDNAMES

EXTRN	__imp_PsGetProcessSectionBaseAddress:PROC
EXTRN	__imp_PsLookupProcessByProcessId:PROC
EXTRN	__imp_MmCopyVirtualMemory:PROC
EXTRN	__imp_ObfDereferenceObject:PROC
PUBLIC	?complete_request@@YA_NH_K@Z			; complete_request
PUBLIC	?handle_incoming_packet@@YA_KAEBUPacket@@@Z	; handle_incoming_packet
;	COMDAT pdata
pdata	SEGMENT
$pdata$?complete_request@@YA_NH_K@Z DD imagerel $LN8
	DD	imagerel $LN8+109
	DD	imagerel $unwind$?complete_request@@YA_NH_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?handle_incoming_packet@@YA_KAEBUPacket@@@Z DD imagerel $LN17
	DD	imagerel $LN17+275
	DD	imagerel $unwind$?handle_incoming_packet@@YA_KAEBUPacket@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?handle_get_base_address@@YA_KAEBUPacketGetBaseAddress@@@Z DD imagerel ?handle_get_base_address@@YA_KAEBUPacketGetBaseAddress@@@Z
	DD	imagerel ?handle_get_base_address@@YA_KAEBUPacketGetBaseAddress@@@Z+80
	DD	imagerel $unwind$?handle_get_base_address@@YA_KAEBUPacketGetBaseAddress@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?handle_copy_memory@@YA_KAEBUPacketCopyMemory@@@Z DD imagerel ?handle_copy_memory@@YA_KAEBUPacketCopyMemory@@@Z
	DD	imagerel ?handle_copy_memory@@YA_KAEBUPacketCopyMemory@@@Z+176
	DD	imagerel $unwind$?handle_copy_memory@@YA_KAEBUPacketCopyMemory@@@Z
;	COMDAT xdata
xdata	SEGMENT
$unwind$?handle_copy_memory@@YA_KAEBUPacketCopyMemory@@@Z DD 040602H
	DD	065c1602H
	DD	030027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?handle_get_base_address@@YA_KAEBUPacketGetBaseAddress@@@Z DD 052f02H
	DD	062c1601H
	DD	04342fH
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?handle_incoming_packet@@YA_KAEBUPacket@@@Z DD 080a02H
	DD	065d1602H
	DD	06ea06aaH
	DD	0d340aH
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?complete_request@@YA_NH_K@Z DD 030402H
	DD	06001601H
	DD	0c204H
; Function compile flags: /Ogtp
; File c:\users\aapo\desktop\fortnite_shait\kernel rpm\dummy\packet_handler.cpp
;	COMDAT ?handle_copy_memory@@YA_KAEBUPacketCopyMemory@@@Z
_TEXT	SEGMENT
dest_process$ = 80
packet$ = 80
src_process$ = 88
return_size$ = 96
?handle_copy_memory@@YA_KAEBUPacketCopyMemory@@@Z PROC	; handle_copy_memory, COMDAT

; 6    : {

  00000	40 53		 push	 rbx
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00006	48 8b d9	 mov	 rbx, rcx

; 7    : 	PEPROCESS dest_process = nullptr;

  00009	48 c7 44 24 50
	00 00 00 00	 mov	 QWORD PTR dest_process$[rsp], 0

; 8    : 	PEPROCESS src_process  = nullptr;
; 9    : 
; 10   : 	if (!NT_SUCCESS(PsLookupProcessByProcessId(HANDLE(packet.dest_process_id), &dest_process)))

  00012	8b 09		 mov	 ecx, DWORD PTR [rcx]
  00014	48 8d 54 24 50	 lea	 rdx, QWORD PTR dest_process$[rsp]
  00019	48 c7 44 24 58
	00 00 00 00	 mov	 QWORD PTR src_process$[rsp], 0
  00022	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PsLookupProcessByProcessId
  00028	85 c0		 test	 eax, eax
  0002a	78 1d		 js	 SHORT $LN5@handle_cop

; 11   : 	{
; 12   : 		return uint64_t(STATUS_INVALID_CID);
; 13   : 	}
; 14   : 
; 15   : 	if (!NT_SUCCESS(PsLookupProcessByProcessId(HANDLE(packet.src_process_id), &src_process)))

  0002c	8b 4b 10	 mov	 ecx, DWORD PTR [rbx+16]
  0002f	48 8d 54 24 58	 lea	 rdx, QWORD PTR src_process$[rsp]
  00034	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PsLookupProcessByProcessId
  0003a	85 c0		 test	 eax, eax
  0003c	79 18		 jns	 SHORT $LN3@handle_cop

; 16   : 	{
; 17   : 		ObDereferenceObject(dest_process);

  0003e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR dest_process$[rsp]
  00043	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_ObfDereferenceObject
$LN5@handle_cop:

; 36   : }

  00049	48 c7 c0 0b 00
	00 c0		 mov	 rax, -1073741813	; ffffffffc000000bH
  00050	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00054	5b		 pop	 rbx
  00055	c3		 ret	 0
$LN3@handle_cop:

; 18   : 		return uint64_t(STATUS_INVALID_CID);
; 19   : 	}
; 20   : 
; 21   : 	SIZE_T   return_size = 0;
; 22   : 	NTSTATUS status = MmCopyVirtualMemory(

  00056	8b 43 20	 mov	 eax, DWORD PTR [rbx+32]
  00059	48 8d 4c 24 60	 lea	 rcx, QWORD PTR return_size$[rsp]
  0005e	4c 8b 4b 08	 mov	 r9, QWORD PTR [rbx+8]
  00062	4c 8b 44 24 50	 mov	 r8, QWORD PTR dest_process$[rsp]
  00067	48 8b 53 18	 mov	 rdx, QWORD PTR [rbx+24]
  0006b	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  00070	48 8b 4c 24 58	 mov	 rcx, QWORD PTR src_process$[rsp]
  00075	c6 44 24 28 01	 mov	 BYTE PTR [rsp+40], 1
  0007a	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0007f	48 c7 44 24 60
	00 00 00 00	 mov	 QWORD PTR return_size$[rsp], 0
  00088	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_MmCopyVirtualMemory

; 23   : 		src_process,
; 24   : 		(void*)packet.src_address,
; 25   : 		dest_process,
; 26   : 		(void*)packet.dest_address,
; 27   : 		packet.size,
; 28   : 		UserMode,
; 29   : 		&return_size
; 30   : 	);
; 31   : 
; 32   : 	ObDereferenceObject(dest_process);

  0008e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR dest_process$[rsp]
  00093	48 63 d8	 movsxd	 rbx, eax
  00096	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_ObfDereferenceObject

; 33   : 	ObDereferenceObject(src_process);

  0009c	48 8b 4c 24 58	 mov	 rcx, QWORD PTR src_process$[rsp]
  000a1	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_ObfDereferenceObject

; 34   : 
; 35   : 	return uint64_t(status);

  000a7	48 8b c3	 mov	 rax, rbx

; 36   : }

  000aa	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000ae	5b		 pop	 rbx
  000af	c3		 ret	 0
?handle_copy_memory@@YA_KAEBUPacketCopyMemory@@@Z ENDP	; handle_copy_memory
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\aapo\desktop\fortnite_shait\kernel rpm\dummy\packet_handler.cpp
;	COMDAT ?handle_get_base_address@@YA_KAEBUPacketGetBaseAddress@@@Z
_TEXT	SEGMENT
process$ = 48
packet$ = 48
?handle_get_base_address@@YA_KAEBUPacketGetBaseAddress@@@Z PROC ; handle_get_base_address, COMDAT

; 39   : {

  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 40   : 	PEPROCESS process = nullptr;
; 41   : 	NTSTATUS  status  = PsLookupProcessByProcessId(HANDLE(packet.process_id), &process);

  00004	8b 09		 mov	 ecx, DWORD PTR [rcx]
  00006	48 8d 54 24 30	 lea	 rdx, QWORD PTR process$[rsp]
  0000b	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR process$[rsp], 0
  00014	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PsLookupProcessByProcessId

; 42   : 
; 43   : 	if (!NT_SUCCESS(status))

  0001a	85 c0		 test	 eax, eax
  0001c	79 07		 jns	 SHORT $LN2@handle_get

; 44   : 		return 0;

  0001e	33 c0		 xor	 eax, eax

; 51   : }

  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	c3		 ret	 0
$LN2@handle_get:

; 45   : 
; 46   : 	const auto base_address = uint64_t(PsGetProcessSectionBaseAddress(process));

  00025	48 8b 4c 24 30	 mov	 rcx, QWORD PTR process$[rsp]
  0002a	48 89 5c 24 20	 mov	 QWORD PTR [rsp+32], rbx
  0002f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PsGetProcessSectionBaseAddress

; 47   : 
; 48   : 	ObDereferenceObject(process);

  00035	48 8b 4c 24 30	 mov	 rcx, QWORD PTR process$[rsp]
  0003a	48 8b d8	 mov	 rbx, rax
  0003d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_ObfDereferenceObject

; 49   : 
; 50   : 	return base_address;

  00043	48 8b c3	 mov	 rax, rbx
  00046	48 8b 5c 24 20	 mov	 rbx, QWORD PTR [rsp+32]

; 51   : }

  0004b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004f	c3		 ret	 0
?handle_get_base_address@@YA_KAEBUPacketGetBaseAddress@@@Z ENDP ; handle_get_base_address
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\aapo\desktop\fortnite_shait\kernel rpm\dummy\packet_handler.cpp
;	COMDAT ?handle_incoming_packet@@YA_KAEBUPacket@@@Z
_TEXT	SEGMENT
process$3 = 80
dest_process$4 = 80
packet$ = 80
src_process$5 = 88
return_size$6 = 96
?handle_incoming_packet@@YA_KAEBUPacket@@@Z PROC	; handle_incoming_packet, COMDAT

; 54   : {

$LN17:
  00000	48 89 5c 24 20	 mov	 QWORD PTR [rsp+32], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b d9	 mov	 rbx, rcx

; 55   : 	switch (packet.header.type)

  0000d	8b 49 04	 mov	 ecx, DWORD PTR [rcx+4]
  00010	85 c9		 test	 ecx, ecx
  00012	74 57		 je	 SHORT $LN4@handle_inc
  00014	83 f9 01	 cmp	 ecx, 1
  00017	74 12		 je	 SHORT $LN5@handle_inc

; 62   : 
; 63   : 	default:
; 64   : 		break;
; 65   : 	}
; 66   : 
; 67   : 	return uint64_t(STATUS_NOT_IMPLEMENTED);

  00019	48 c7 c0 02 00
	00 c0		 mov	 rax, -1073741822	; ffffffffc0000002H

; 68   : }

  00020	48 8b 5c 24 68	 mov	 rbx, QWORD PTR [rsp+104]
  00025	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00029	5f		 pop	 rdi
  0002a	c3		 ret	 0
$LN5@handle_inc:

; 41   : 	NTSTATUS  status  = PsLookupProcessByProcessId(HANDLE(packet.process_id), &process);

  0002b	8b 4b 08	 mov	 ecx, DWORD PTR [rbx+8]
  0002e	48 8d 54 24 50	 lea	 rdx, QWORD PTR process$3[rsp]
  00033	33 ff		 xor	 edi, edi
  00035	48 89 7c 24 50	 mov	 QWORD PTR process$3[rsp], rdi
  0003a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PsLookupProcessByProcessId

; 42   : 
; 43   : 	if (!NT_SUCCESS(status))

  00040	85 c0		 test	 eax, eax
  00042	78 19		 js	 SHORT $LN12@handle_inc

; 44   : 		return 0;
; 45   : 
; 46   : 	const auto base_address = uint64_t(PsGetProcessSectionBaseAddress(process));

  00044	48 8b 4c 24 50	 mov	 rcx, QWORD PTR process$3[rsp]
  00049	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PsGetProcessSectionBaseAddress

; 47   : 
; 48   : 	ObDereferenceObject(process);

  0004f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR process$3[rsp]
  00054	48 8b f8	 mov	 rdi, rax
  00057	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_ObfDereferenceObject
$LN12@handle_inc:

; 56   : 	{
; 57   : 	case PacketType::packet_copy_memory:
; 58   : 		return handle_copy_memory(packet.data.copy_memory);
; 59   : 
; 60   : 	case PacketType::packet_get_base_address:
; 61   : 		return handle_get_base_address(packet.data.get_base_address);

  0005d	48 8b c7	 mov	 rax, rdi

; 68   : }

  00060	48 8b 5c 24 68	 mov	 rbx, QWORD PTR [rsp+104]
  00065	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00069	5f		 pop	 rdi
  0006a	c3		 ret	 0
$LN4@handle_inc:

; 10   : 	if (!NT_SUCCESS(PsLookupProcessByProcessId(HANDLE(packet.dest_process_id), &dest_process)))

  0006b	8b 4b 08	 mov	 ecx, DWORD PTR [rbx+8]
  0006e	48 8d 54 24 50	 lea	 rdx, QWORD PTR dest_process$4[rsp]
  00073	33 ff		 xor	 edi, edi
  00075	48 89 7c 24 50	 mov	 QWORD PTR dest_process$4[rsp], rdi
  0007a	48 89 7c 24 58	 mov	 QWORD PTR src_process$5[rsp], rdi
  0007f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PsLookupProcessByProcessId
  00085	85 c0		 test	 eax, eax
  00087	78 1d		 js	 SHORT $LN15@handle_inc

; 11   : 	{
; 12   : 		return uint64_t(STATUS_INVALID_CID);
; 13   : 	}
; 14   : 
; 15   : 	if (!NT_SUCCESS(PsLookupProcessByProcessId(HANDLE(packet.src_process_id), &src_process)))

  00089	8b 4b 18	 mov	 ecx, DWORD PTR [rbx+24]
  0008c	48 8d 54 24 58	 lea	 rdx, QWORD PTR src_process$5[rsp]
  00091	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PsLookupProcessByProcessId
  00097	85 c0		 test	 eax, eax
  00099	79 1d		 jns	 SHORT $LN10@handle_inc

; 16   : 	{
; 17   : 		ObDereferenceObject(dest_process);

  0009b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR dest_process$4[rsp]
  000a0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_ObfDereferenceObject
$LN15@handle_inc:

; 68   : }

  000a6	48 c7 c0 0b 00
	00 c0		 mov	 rax, -1073741813	; ffffffffc000000bH
  000ad	48 8b 5c 24 68	 mov	 rbx, QWORD PTR [rsp+104]
  000b2	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000b6	5f		 pop	 rdi
  000b7	c3		 ret	 0
$LN10@handle_inc:

; 22   : 	NTSTATUS status = MmCopyVirtualMemory(

  000b8	8b 43 28	 mov	 eax, DWORD PTR [rbx+40]
  000bb	48 8d 4c 24 60	 lea	 rcx, QWORD PTR return_size$6[rsp]
  000c0	4c 8b 4b 10	 mov	 r9, QWORD PTR [rbx+16]
  000c4	4c 8b 44 24 50	 mov	 r8, QWORD PTR dest_process$4[rsp]
  000c9	48 8b 53 20	 mov	 rdx, QWORD PTR [rbx+32]
  000cd	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  000d2	48 8b 4c 24 58	 mov	 rcx, QWORD PTR src_process$5[rsp]
  000d7	c6 44 24 28 01	 mov	 BYTE PTR [rsp+40], 1
  000dc	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000e1	48 89 7c 24 60	 mov	 QWORD PTR return_size$6[rsp], rdi
  000e6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_MmCopyVirtualMemory

; 23   : 		src_process,
; 24   : 		(void*)packet.src_address,
; 25   : 		dest_process,
; 26   : 		(void*)packet.dest_address,
; 27   : 		packet.size,
; 28   : 		UserMode,
; 29   : 		&return_size
; 30   : 	);
; 31   : 
; 32   : 	ObDereferenceObject(dest_process);

  000ec	48 8b 4c 24 50	 mov	 rcx, QWORD PTR dest_process$4[rsp]
  000f1	48 63 d8	 movsxd	 rbx, eax
  000f4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_ObfDereferenceObject

; 33   : 	ObDereferenceObject(src_process);

  000fa	48 8b 4c 24 58	 mov	 rcx, QWORD PTR src_process$5[rsp]
  000ff	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_ObfDereferenceObject

; 34   : 
; 35   : 	return uint64_t(status);

  00105	48 8b c3	 mov	 rax, rbx

; 68   : }

  00108	48 8b 5c 24 68	 mov	 rbx, QWORD PTR [rsp+104]
  0010d	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00111	5f		 pop	 rdi
  00112	c3		 ret	 0
?handle_incoming_packet@@YA_KAEBUPacket@@@Z ENDP	; handle_incoming_packet
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\aapo\desktop\fortnite_shait\kernel rpm\dummy\packet_handler.cpp
; File c:\users\aapo\desktop\fortnite_shait\kernel rpm\dummy\ksocket\berkeley.c
; File c:\users\aapo\desktop\fortnite_shait\kernel rpm\dummy\ksocket\ksocket.c
; File c:\users\aapo\desktop\fortnite_shait\kernel rpm\dummy\packet_handler.cpp
; File c:\users\aapo\desktop\fortnite_shait\kernel rpm\dummy\ksocket\berkeley.c
; File c:\users\aapo\desktop\fortnite_shait\kernel rpm\dummy\packet_handler.cpp
; File c:\users\aapo\desktop\fortnite_shait\kernel rpm\dummy\ksocket\berkeley.c
; File c:\users\aapo\desktop\fortnite_shait\kernel rpm\dummy\ksocket\ksocket.c
; File c:\users\aapo\desktop\fortnite_shait\kernel rpm\dummy\packet_handler.cpp
; File c:\users\aapo\desktop\fortnite_shait\kernel rpm\dummy\ksocket\berkeley.c
; File c:\users\aapo\desktop\fortnite_shait\kernel rpm\dummy\packet_handler.cpp
; File c:\users\aapo\desktop\fortnite_shait\kernel rpm\dummy\ksocket\ksocket.c
; File c:\users\aapo\desktop\fortnite_shait\kernel rpm\dummy\ksocket\berkeley.c
; File c:\users\aapo\desktop\fortnite_shait\kernel rpm\dummy\packet_handler.cpp
;	COMDAT ?complete_request@@YA_NH_K@Z
_TEXT	SEGMENT
packet$ = 48
Length$1 = 112
client_connection$ = 112
result$ = 120
?complete_request@@YA_NH_K@Z PROC			; complete_request, COMDAT

; 72   : {

$LN8:
  00000	48 83 ec 68	 sub	 rsp, 104		; 00000068H
; File c:\users\aapo\desktop\fortnite_shait\kernel rpm\dummy\ksocket\berkeley.c

; 608  :   PKSOCKET Socket = KsArray[FROM_SOCKETFD(sockfd)];

  00004	48 63 c1	 movsxd	 rax, ecx
; File c:\users\aapo\desktop\fortnite_shait\kernel rpm\dummy\ksocket\ksocket.c

; 842  :   return KsSendRecv(Socket, Buffer, Length, Flags, TRUE);

  00007	4c 8d 44 24 70	 lea	 r8, QWORD PTR Length$1[rsp]
  0000c	0f 57 c0	 xorps	 xmm0, xmm0
; File c:\users\aapo\desktop\fortnite_shait\kernel rpm\dummy\packet_handler.cpp

; 77   : 	packet.data.completed.result	= result;

  0000f	48 89 54 24 38	 mov	 QWORD PTR packet$[rsp+8], rdx
  00014	0f 57 c9	 xorps	 xmm1, xmm1
  00017	c7 44 24 30 85
	68 45 54	 mov	 DWORD PTR packet$[rsp], 1413834885 ; 54456885H
; File c:\users\aapo\desktop\fortnite_shait\kernel rpm\dummy\ksocket\berkeley.c

; 608  :   PKSOCKET Socket = KsArray[FROM_SOCKETFD(sockfd)];

  0001f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:KsArray
; File c:\users\aapo\desktop\fortnite_shait\kernel rpm\dummy\packet_handler.cpp

; 76   : 	packet.header.type				= PacketType::packet_completed;

  00026	c7 44 24 34 02
	00 00 00	 mov	 DWORD PTR packet$[rsp+4], 2
; File c:\users\aapo\desktop\fortnite_shait\kernel rpm\dummy\ksocket\berkeley.c

; 608  :   PKSOCKET Socket = KsArray[FROM_SOCKETFD(sockfd)];

  0002e	48 8b 4c c1 f8	 mov	 rcx, QWORD PTR [rcx+rax*8-8]
; File c:\users\aapo\desktop\fortnite_shait\kernel rpm\dummy\ksocket\ksocket.c

; 842  :   return KsSendRecv(Socket, Buffer, Length, Flags, TRUE);

  00033	48 8d 54 24 30	 lea	 rdx, QWORD PTR packet$[rsp]
; File c:\users\aapo\desktop\fortnite_shait\kernel rpm\dummy\packet_handler.cpp

; 73   : 	Packet packet{ };

  00038	f3 0f 7f 44 24
	40		 movdqu	 XMMWORD PTR packet$[rsp+16], xmm0
; File c:\users\aapo\desktop\fortnite_shait\kernel rpm\dummy\ksocket\berkeley.c

; 610  :   ULONG Length = (ULONG)len;

  0003e	c7 44 24 70 30
	00 00 00	 mov	 DWORD PTR Length$1[rsp], 48 ; 00000030H
; File c:\users\aapo\desktop\fortnite_shait\kernel rpm\dummy\packet_handler.cpp

; 73   : 	Packet packet{ };

  00046	f3 0f 7f 4c 24
	50		 movdqu	 XMMWORD PTR packet$[rsp+32], xmm1
; File c:\users\aapo\desktop\fortnite_shait\kernel rpm\dummy\ksocket\ksocket.c

; 842  :   return KsSendRecv(Socket, Buffer, Length, Flags, TRUE);

  0004c	c6 44 24 20 01	 mov	 BYTE PTR [rsp+32], 1
  00051	e8 00 00 00 00	 call	 KsSendRecv
; File c:\users\aapo\desktop\fortnite_shait\kernel rpm\dummy\ksocket\berkeley.c

; 613  :   return NT_SUCCESS(Status)

  00056	85 c0		 test	 eax, eax
  00058	b9 ff ff ff ff	 mov	 ecx, -1
  0005d	0f 49 4c 24 70	 cmovns	 ecx, DWORD PTR Length$1[rsp]
; File c:\users\aapo\desktop\fortnite_shait\kernel rpm\dummy\packet_handler.cpp

; 79   : 	return send(client_connection, &packet, sizeof(packet), 0) != SOCKET_ERROR;

  00062	83 f9 ff	 cmp	 ecx, -1
  00065	0f 95 c0	 setne	 al

; 80   : }

  00068	48 83 c4 68	 add	 rsp, 104		; 00000068H
  0006c	c3		 ret	 0
?complete_request@@YA_NH_K@Z ENDP			; complete_request
_TEXT	ENDS
END
